import discord
from discord.ext import commands
from discord import app_commands
import aiohttp
import json
import asyncio
from typing import Optional

JSONBIN_ID = "68bc589fae596e708fe4d068"
JSONBIN_SECRET = "$2a$10$3IrBbikJjQzeGd6FiaLHmuz8wTK.TXOMJRBkzMpeCAVH4ikeNtNaq"

ALLOWED_CHANNELS = [
    1378018756843933767,
    1375457632394936340,
    1375457683531890688,
    1377502522788417558,
    1378456514955710646
]

REACTION_OPTIONS = ["1", "2", "3", "11"]

class PepperPicCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.session = aiohttp.ClientSession()

    async def cog_unload(self):
        await self.session.close()

    async def fetch_jsonbin(self):
        url = f"https://api.jsonbin.io/v3/b/{JSONBIN_ID}/latest"
        headers = {"X-Master-Key": JSONBIN_SECRET}
        async with self.session.get(url, headers=headers) as resp:
            data = await resp.json()
            return data.get("record", {})

    @app_commands.command(
        name="pepperpic",
        description="Posts the picture with the most reactions."
    )
    @app_commands.describe(reaction_type="Choose which reaction type to show")
    @app_commands.choices(reaction_type=[
        app_commands.Choice(name="1️", value="1"),
        app_commands.Choice(name="2️", value="2"),
        app_commands.Choice(name="3", value="3"),
        app_commands.Choice(name="11", value="11")
    ])
    async def pepperpic(
        self, 
        interaction: discord.Interaction, 
        reaction_type: Optional[app_commands.Choice[str]] = None
    ):
        await interaction.response.defer()
        record = await self.fetch_jsonbin()
        if not record:
            await interaction.followup.send("No data found in JSONBin.")
            return

        types_to_post = [reaction_type.value] if reaction_type else REACTION_OPTIONS

        embeds = []
        for key in types_to_post:
            max_count = -1
            top_msg_id = None
            for msg_id, counts in record.items():
                count = counts.get(key, 0)
                if count > max_count:
                    max_count = count
                    top_msg_id = msg_id

            if not top_msg_id:
                continue

            found = False
            for channel_id in ALLOWED_CHANNELS:
                channel = self.bot.get_channel(channel_id)
                if not channel:
                    continue
                try:
                    msg = await channel.fetch_message(int(top_msg_id))
                    if msg.attachments:
                        user_id = msg.mentions[0].id if msg.mentions else None
                        mention_text = f"<@{user_id}>" if user_id else "Unknown User"

                        embed = discord.Embed(
                            title=f"Top {key} Reaction",
                            description=f"Generated by {mention_text}\n[Jump to Message]({msg.jump_url})"
                        )
                        embed.set_image(url=msg.attachments[0].url)
                        embeds.append(embed)
                        found = True
                        break
                except (discord.NotFound, discord.Forbidden):
                    continue

            if not found:
                print(f"Message {top_msg_id} not found in allowed channels.")

        if not embeds:
            await interaction.followup.send("No top pictures could be found.")
            return

        for embed in embeds:
            await interaction.followup.send(embed=embed)
            await asyncio.sleep(0.25)
            
async def setup(bot):
    await bot.add_cog(PepperPicCog(bot))
